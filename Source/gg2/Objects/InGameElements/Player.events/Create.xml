<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<event category="CREATE" id="0">
  <actions>
    <action id="603" library="1">
      <!--action name: Code-->
      <kind>CODE</kind>
      <allowRelative>false</allowRelative>
      <question>false</question>
      <canApplyTo>true</canApplyTo>
      <actionType>CODE</actionType>
      <functionName/>
      <relative>false</relative>
      <not>false</not>
      <appliesTo>.self</appliesTo>
      <arguments>
        <argument kind="STRING">{
    object = -1;
    team = TEAM_SPECTATOR;
    class = CLASS_SCOUT
    socket = -1;
    name = "";
    isOHU = 0
    isRcon = 0
    
    global.IDIndex += 1
    
    if global.IDIndex &gt; 999
    {      
        global.IDIndex = 0
    }
    
    var foundID, specID, IDTaken;
    
    foundID = 0
    specID = global.IDIndex
        
    while foundID == 0
    {
        IDTaken = 0
        
        for(i=0; i&lt;ds_list_size(global.players); i+=1)
        {
            if real(ds_list_find_value(global.players, i).ServerID) == foundID
            {
                specID += 1
                IDTaken = 1
                break;
            }
        }
            
        if IDTaken == 0
        {
            foundID = 1
        }
    }
    
    global.IDIndex = specID

    ServerID = specID
    
    if ServerID &lt; 10
    {
        ServerID = "00"+string(ServerID)
    }
    else if ServerID &lt; 100
    {
        ServerID = "0"+string(ServerID)
    }
    else
    {
        ServerID = string(ServerID)
    }
    
    //fuck your shit I'm making statistic arrays
    stats[KILLS] = 0;
    stats[DEATHS] = 0;
    stats[CAPS] = 0;
    stats[ASSISTS] = 0;
    stats[DESTRUCTION] = 0;
    stats[STABS] = 0;
    stats[HEALING] = 0;
    stats[DEFENSES] = 0;
    stats[INVULNS] = 0;
    stats[BONUS] = 0;
    stats[DOMINATIONS] = 0;
    stats[REVENGE] = 0;
    stats[POINTS] = 0;
    
    //statistic array for single life/arena
    roundStats[KILLS] = 0;
    roundStats[DEATHS] = 0;
    roundStats[CAPS] = 0;
    roundStats[ASSISTS] = 0;
    roundStats[DESTRUCTION] = 0;
    roundStats[STABS] = 0;
    roundStats[HEALING] = 0;
    roundStats[DEFENSES] = 0;
    roundStats[INVULNS] = 0;
    roundStats[BONUS] = 0;
    roundStats[DOMINATIONS] = 0;
    roundStats[REVENGE] = 0;
    roundStats[POINTS] = 0;
    
    timesChangedCapLimit = 0;
    
    lastKnownx=0;
    lastKnowny=0;
    
    humiliated=0;
    
    //Arena mode - used by server to check if the player can spawn
    canSpawn = 1;
    if instance_exists(ArenaHUD) {
        if ArenaHUD.roundStart == 0 canSpawn = 0;
    }
    
    //Sentries for Engies
    //sentryBuilt = 0;
    sentry=-1;
    
    //authorization for servers with passwords
    //clients who change the source to get around passwords will be sent
    //garbage which will disconnect them in gameserverbeginstep
    if global.isHost {
        if global.serverPassword == "" authorized = true;
        else {
            authorized = false;
            //counter to limit players to 30 seconds to send a password before they
            //get das boot
            passwordCount = 0;
        }
    }
}
</argument>
      </arguments>
    </action>
  </actions>
</event>
