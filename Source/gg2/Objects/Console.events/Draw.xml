<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<event category="DRAW" id="0">
  <actions>
    <action id="603" library="1">
      <!--action name: Code-->
      <kind>CODE</kind>
      <allowRelative>false</allowRelative>
      <question>false</question>
      <canApplyTo>true</canApplyTo>
      <actionType>CODE</actionType>
      <functionName/>
      <relative>false</relative>
      <not>false</not>
      <appliesTo>.self</appliesTo>
      <arguments>
        <argument kind="STRING">// VinMod code, taken from DPM. Cleaned by Orpheon.

xoffset = view_xview[0];
yoffset = view_yview[0];
xsize = view_wview[0];
ysize = view_hview[0];
xbegin = 120;
ybegin = 40;
spacing = 14;
width = 300;

x_left = xoffset + 180;
y_top = yoffset + 8;
x_right = xoffset + xsize - 10;
y_bottom = yoffset + ysize - 10;

// Window coordinates:
window_left = x_left + 10;
window_right = x_right - 10;
window_top = y_top + 20;
window_bottom = y_bottom - 30;

draw_set_color(c_gray);
draw_roundrect(x_left,y_top,x_right,y_bottom + 5,false);   
draw_rectangle_color(window_left, window_top, window_right, window_bottom,c_black,c_black,c_black,c_black,false);// The big log screen
draw_rectangle_color(x_left + 10,y_bottom - 25,x_right - 10,y_bottom - 5,c_black,c_black,c_black,c_black,false);// The input field

// Console window bevel:
draw_line_color(window_left, window_top, window_left, window_bottom,c_ltgray,c_ltgray);
draw_line_color(window_left, window_top, window_right, window_top,c_ltgray,c_ltgray);
draw_line_color(window_right, window_top, window_right, window_bottom,c_dkgray,c_dkgray);
draw_line_color(window_left, window_bottom, window_right, window_bottom,c_dkgray,c_dkgray);
// Input field bevel:
draw_line_color(x_left + 10,y_bottom - 25,x_right - 10,y_bottom - 25,c_ltgray,c_ltgray);
draw_line_color(x_left + 10,y_bottom - 25,x_left + 10,y_bottom - 5,c_ltgray,c_ltgray);

draw_set_color(c_white);
draw_set_valign(fa_middle);
draw_set_halign(fa_left);
draw_set_alpha(1);
draw_set_font(fnt_consoleTitle);
draw_text(x_left+15, y_top+10, "Console - OHU"+string(GAME_VERSION_STRING));
draw_set_font(fnt_consoleText);

// Draw text in input field
draw_text(x_left+12, y_bottom-15,keyboard_string+typingChar);

// Draw the whole log
var message;
for(i=0; i&lt;ds_list_size(global.consoleLog); i+=1)
{
    message = ds_list_find_value(global.consoleLog, ds_list_size(global.consoleLog)-1-i)

    switch string_copy(message, 0, 3)
    {
        case "/:/":// If a color-code was included.
            draw_set_color(getColorCode(string_copy(message, 4, 1)))
            draw_text(window_left+10, (window_bottom-20)-i*spacing, string_copy(message, 5, string_length(message)));
            break

        default:
            draw_set_color(c_white);
            draw_text(window_left+5, (window_bottom-20)-i*spacing, message);
            break
    }
}


draw_set_font(fnt_gg2);
</argument>
      </arguments>
    </action>
  </actions>
</event>
